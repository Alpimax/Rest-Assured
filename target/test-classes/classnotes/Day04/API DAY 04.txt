

API DAY 04 - REVIEW 
==========================================

QUESTION --> When would it be more appropriate to use queryParam and not pathParam and pathParam and not queryParam?

	--- How can we decide it ? 

		- if the swagger have path param to get only one resource from resources we need to use pathParam

		- Also it depends your requirement which data or response you wanna get 

how do we know to choose between pathParam and queryParam?


==========================================

-- HOW TO READ DATA FROM JSON FILE TO MAKE VERIFICATION 


- CONTAINS --> NOT SUGGESTED - DOES NOT MAKE GUARANTEE 

	        	{
	        		"id":4,
	        		"name":"Fidole",
	        		"phone":12346789

	        	}

	        	response.body().asString() --> String	
	        	response.body().asString().contains("Fidole") --> it will return boolean 

	This is not the effiecient way 
	

==========================================
	GPATH --> It is the syntax to get specific data from JSON 

		- GPath is a path expression language integrated into Groovy which allows parts of nested structured data to be identified.

		- Link -->http://docs.groovy-lang.org/latest/html/documentation/#_gpath

==========================================

    1.Path method 

	
	response.path("pathOFKeyFromResponse") ---> it will return value that is stored in related key
	
	Response response=get("/spartans");

				{
	        		"id":4,
	        		"name":"Fidole",
	        		"gender":"Male"
	        		"phone":12346789

	        	}

	response.path("id") ---> 4
	response.path("name") ---> Fidole
	response.path("gender") --> Male
	response.path("phone") --> 12346789	 



    2.JsonPath method 

    	-- there is no difference about using Gpath syntax with path(method)
    	-- It is similar way with path() method to navigate into JSON response 
    	-- It has couple of methods to make it readable and return required type of data 

    			- getString
    			- getInt
    			- getLong
    			- getList
    			- getObject
    			.....
    			...
    			..


    ====== items.findAll {it.region_id==2}.country_name

    	items ---> it is key for the array that we are getting from response 

    		.findAll --> it is method tthat comes from Gpath to find all matching data 

    			{it.region_id==2} --> this is the condition that we are looking for to filter 

    			  it --> iterator--> it will check each eleemnt from the array 

    			  	after filter array of Json Object will prepare List of data based on your return type 


    	Ex --> 
    			List<String> countryNamesWithID2 = jp.getList("items.findAll {it.region_id==2}.country_name");

    				 sout(countryNamesWithID2)---> [Argentina, Brazil, Canada, Mexico, United States of America]










    -- How to create JSONPATH Object

    -------
     	Response response=get("/spartans");

     	JsonPath jsonpath=response.jsonPath();

    -------

		JsonPath jsonpath= get("/spartans").jsonPath();

    --------

=====================


 what will we use in job env?

 		- It depends on how much data u need to verify.If you wanna verfiy all the field from response.We will convert response to regular Java class (like Animal,Shape .... ) to verify 

 		- If you wanna assert only one field use JsonPath/Path method to assert it 


 		- ..............


=====================

		












