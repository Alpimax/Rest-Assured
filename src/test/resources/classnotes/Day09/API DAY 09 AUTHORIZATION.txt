API DAY 09 


--------- REVIEW ---------

Authentication and Authorization

Authentication : 401 
	Telling the system who you are , proving the identity against who you say you are.
Authorization :  403
	Things you can do according to who you are, The permission attached to your identity.



1- Basic Auth

	- Providing username and password along with each request.
	- Behind the scene credentials are encoded with Base64 and 
       it is sending as header 
    - It is easy to decode    

       		- Authorization  Basic dXNlcjp1c2Vy 
           
            - dXNlcjp1c2Vy --> It is encryted format of credentials 

	
	For example
	 - The spartan app with basic auth
	 - if username and password not provided we will get 401

	 		given()
	 			 .auth().basic("user","user")
	 			 .accept(ContentType.JSON)
	 			 .......
	 			 ....


	 		public static Response getUser(String userType){

	 			credetails = getCredentailsByRuserType(userType);
	 		
				return  	given()
				 			 .auth().basic(credetails,credetails)
				 			 .accept(ContentType.JSON)
				 			 .......
				 			 ....

	 		}	 
TOKEN BASED APPLICATIONS

2- Bearer token

	- The bearer token allowing access to a certain resource or URL, usually generated by the server in response to a login request and  added to a header called Authorization
	- The value start with Bearer + your long token.
	- The common token type for this known as JWT(Json Web Token)


	- It has information about the identity and authority which can be decoded. The token usually start with ey......long token
	- It’s made up of three parts: a header, body, and signature. 

		- Body contains --> the user’s identity +  user’s rights +  an expiration  date

	- JWT centralizes authentication & authorization by generating a single shared token that contains user and app-level information 

     Authorization : Bearer 	
     				 eyJhbGciOiJIUzI1NiJ9
     				.eyJqdGkiOiI1Mzc2IiwiYXVkIjoic3R1ZGVudC10ZWFtLWxYWRlciJ9
            		.DoFI744aMLxUaf0GcjVOEDkJ3Wh7RlKDx-TYp8_sJpU token


            		/teacher/** --> teacher 
            		/student/** --> student 

            		/login ---> No need auth
            		/sign ---> No need auth



     		given()
	 			 .header("Authorization","Bearer "+accessToken)
	 			 .accept(ContentType.JSON)
	 			 .......
	 			 ....
			 

3- API Keys

	- A token provided by the api vendor , to identify who you are and track your usage and authorize the requests
	- API keys authenticate and authorize using the same API key
	- A unique identifier that authenticates an API Consumer (whether the caller is an application, user, or developer), which is usually long-lived so that it is easy to manage for the API consumer.
	
	- Usually , it's required to provide the token either in query parameter or headers 

	- Uses mostly for production systems / applications  /  system-system integrations 

		NewsAPI 
				-- Query Param 
					 apiKey --> KeyGoesHere
					 DisAdvantage --> It is eligible to see in URL if the 		  connection is not secure 
				-- Header
					 Authorization	KeyGoesHere  
					 X-Api-Key      KeyGoesHere 

4- oAuth2

	- A much more secure way of authorizing your request
	- The flow is similar to Login with google to skyscanner or any other apps 
	- Eventually the token still get added to the Authorization header.
	- OAuth 2.0. allows authentication via 3rd party services, without sharing your
	  password.
	- JWT Tokens can be used as OAuth2 Tokens   

			given().header("Authorization","Bearer "+accessToken )
			......
			.....
			...


			given().auth().oauth(accessToken)
			......
			.....
			...




    
    - Can you give me example as an app for oAuth ?

    	- Bookit  
    	- Skyscanner
    	- Github
    	- Expedia
    	...

       


    - As a testers what we need to know ? 

    	- Read documentation
    	- Based on authentication way we should request in required format


    	   if it is bearer 
    	   	- Send request /login / sign with credentials 
    	   	- Get response and extract token 
    	   	- Send followigm request with token as in document 

    	   Bearer accessToken







NOTE --> IQ --> How did you authorize your request in your application ? and what happen if you don't?


	- One of the internal project I worked on use BASIC AUTH , and we just provide the username , password for each request to make authorize request

	- Another project I worked on have 3 options

		provide the api-key into the query parameter
		provide the api-key in custom header
		provide the api-key in  header with Authorization key
		 
		  For example : News API you did 

	- Most of the projects I worked on use Bearer token with JWT in Authorizaiton header. I have endpoint that I can use to generate this token and pass it to the each requests in my test.

	When the credentails or the token is not provided --> 401

	When the crenentials or the token does not have permission --> 403





